(ns shrine.home
  (:require ["package:flutter/material.dart" :as m]
            ["package:intl/intl.dart" :as i]
            [cljd.flutter :as f]
            [shrine.model.product :as p]
            [shrine.model.products-repository :as pr]
            [shrine.util :as u]))

(defn ^:private card
  [prod theme ^i/NumberFormat formatter]
  (let [textTheme (.-textTheme theme)]
    (m/Card
     .clipBehavior m/Clip.antiAlias
     .child (m/Column
             .crossAxisAlignment m/CrossAxisAlignment.start
             .children [(m/AspectRatio
                         .aspectRatio (/ 18.0 11.0)
                         .child
                         (m/Image.asset
                          (p/asset-name prod)
                          .package (p/asset-package prod)
                          .fit m/BoxFit.fitWidth))
                        (m/Padding
                         .padding (m/EdgeInsets.fromLTRB
                                   16.0 12.0 16.0 8.0)
                         .child
                         (m/Column
                          .crossAxisAlignment m/CrossAxisAlignment.start
                          .children [(m/Text
                                      (:name prod)
                                      .style (.-titleLarge textTheme)
                                      .maxLines 1)
                                     (m/SizedBox .height 8.0)
                                     (m/Text
                                      (.format formatter (:price prod))
                                      .style (.-titleSmall textTheme))]))]))))

(defn ^:private build-grid-cards
  [ctx]
  (let [prods (pr/load-products :all)]
    (if (seq prods)
      (let [theme (m/Theme.of ctx)
            locale (.toString (m/Localizations.localeOf ctx))
            formatter (.simpleCurrency i/NumberFormat .locale locale)]
        (map #(card % theme formatter) prods))
      []))) ;; Else no products, so return an empty vector.

(defn ^m/Widget home-page
  [ctx]
  (f/widget
   (m/Scaffold
    .appBar (m/AppBar
             .leading (m/IconButton
                       .icon (m/Icon m/Icons.menu
                                     .semanticLabel "menu")
                       .onPressed #(u/log "Menu button"))
             .actions [(m/IconButton
                        .icon (m/Icon m/Icons.search
                                      .semanticLabel "search")
                        .onPressed #(u/log "Search button"))
                       (m/IconButton
                        .icon (m/Icon m/Icons.tune
                                      .semanticLabel "filter"),
                        .onPressed #(u/log "Filter button"))]
             .title (m/Text "SHRINE"))
    .body
    (.count m/GridView
            .crossAxisCount 2
            .padding (m/EdgeInsets.all 16.0)
            .childAspectRatio (/ 8.0 9.0)
            .children (build-grid-cards ctx))
    .resizeToAvoidBottomInset false)))
